-- key concepts

-- live validation:

 - validate fields as users type (inut events) for immediate feedback


-- constraint validation API:

 - use validity properties (eg: typeMissmatch, patternMissmatch) 

 - and setCustomValidity() for pw matching


-- reeal world context:

 - mimic a jo application form (without a resume upload) 

 - validating fields like name, email, country to ensure applicant details.


-- submit handling:

 - prevent submission if errors exist,

 - show errors for all invalid fields, or display a success message.

// ////////////////////////////////////////////////////////////////////////////


-- what the code does:

 - creates a job application form with full name, email, countryu postal code,

   - password and password confirmation fields.

 
 - validates fields live as users type (input events) 
 
   - showing errors for invalid inputs (eg invalid email, short pw, missmatched pw)


 - on submission, checks all fields with checkValidity()

   - if valid, shows a success message and resets the form after 3 seconds

   - if invalid displays all inputs with errors and prevents submission

// ////////////////////////////////////////////////////////////////////////////


-- how it works:

-- constraint validation API:

 - uses validity.valueMissing, validity.typeMissmatch, validity.patternMissmatch

   - and validity.tooShort for standard checks.

 - setCustomValidity() enforces password matching.


-- live validation:

 - input events validate fields as users type,

 - with re-validation of pw confirmation when the pw changes.


-- CSS styling:

 - :valid and :invalid pseudo classes highlight fields with green/red borders and backgrounds.

 - error messages appear only for invalid fields.


-- real world design:

 - the form mimics a job application form with a clean, professional UI 

   - shadow, padding hover effects and realistic field inputs.

// ////////////////////////////////////////////////////////////////////////////


-- why its written this way:

-- real world context:

 - the job application theme aligns with career portals (linkedIn, indeed)

 - making validation critical for accurate applicant data.


-- immediate feedback:

 - input events provide instanat validation, 

   - meeting the "live inline" requirement.


-- custom validation:

 - setCustomValidity() handles password matching.

 - which html5 attributes can't do alone.


-- polished UI:

 - subtle styling (eg: box-shadow, hover effects)

   - enhancing realism without distracting from the JS logic.


-- interview context: 

 - validates skills in form handling, real-time validation, and DOM manipulation, 
 
   - often tested in junior developer interviews 
   
   - (e.g., “Build a form with password confirmation”).

   

