// ////////////////////////////////////////////////////////////////////////////


-- what is Webpack and why use it?

 - webpack is a tool that takes all your proj files (js, css, html, images etc)

   - and combines them into a smaller set of optimized files called bundles.

   - these bundles make your website load faster because:

     - the browser downloads fewer files


 - without Webpack:

   - if your project has 10 js files, 5 css files, and 20 images...

     - the browser has to make dozens of requests, slowing things down.

     - Webpack bundles them into: one js file, once css file, and a few images.

       - this reduces requests, speeding things up.

// ////////////////////////////////////////////////////////////////////////////


-- Question, how does bundling make the project smaller if it adds files?

-- before Webpack:

 - src/ directory might have many files (eg: many js files with import statements)

   - the browser would need to download each one separately, which is slow.


-- after Webpack:

 - Webpack combines those files into a single bundle (eg dist/main.js)

   - which contains all the js code.

   - the dist/ directory has fewer files than src/ 

   - and the browser only needs to download the bundle, not the original files.

   - the "extra" files (like dist/main.js) replaces the need for the browser to,

     - fetch all src/ files individually, making a website lighter and faster.


 - its like putting 10 small bags into 1 big bag, it still contains everything.

// ////////////////////////////////////////////////////////////////////////////


--  project overview:

-- goal: 

 - create a webpage showing a product card (eg "wireless headphones")

   - with a name, price and images, 
   - that is styled and displays multiple products from a data file.


-- folder structure:

 - one project called "ecommerce-webpack"

   - deeply nested within "the-odin-project/advanced-js-path/vanilla-js/lessons/webpack/"

 - work in src/ (source files) 
 
 - and webpack will output to dist/ (build or bundled files)

 - a .gitignore file in ecommerce-webpack/ will ensure:

   -  Git ignores unnecessary files like node_modules/ and dist/


-- steps:

 - we add features (js, html, css, images, etc) one at a time

   - building the same app.


-- git intergration:

 - since ecommerce-webpack/ is part of a larger Git repo, (the-odin-project)

 - we will use .gitignore file in ecommerce-webpack/ to:

   - explicitly ignore webpack generated files (dist/) 

   - this is optional but recommended for clarity and

   - to ensure the projects specific ignore rules are self contained.

     - especially in a deeply nested structure.

// ////////////////////////////////////////////////////////////////////////////


-- key concepts (explained simply):

-- bundler: 

 - webpack takes your files and squashes them into fewer files (bundles)

   - so the browser loads a site faster.


-- entry:

 - the main file where webpack puts the bundles files 

   - like the front door of your project/app.


-- loaders:

 - tools that let webpack handle non JS files (like images, css, etc)

   - by turning them into something it can handle.


-- plugins:

 - extra tools that do things like create html files or optimize bundles.


-- mode:

 - "development" makes bundles easy to debug, 

 - "production" makes bundles smaller and faster for real websites.


-- dev server:

 - a tool that auto reloads your webpage when you edit files, 

   - so you don't have to rebuild manually every time you make a change.


-- source map:

 - helps you debug by showing errors in original code, not the bundled version.


-- gitignore:

 - a file that tells Git which files or folders to ingore,

   - eg: node_modules/ , dist/ etc, 

   - so that they are not tracked or commited to the repo.



-- step by step:

 - we will build the project in six steps,

   - each adding to the same app, for each step I'll explain:


   -- what we're doing

   -- files involved

   -- directory structure/shape

   -- how to run the app

   -- git intergration

   -- why it matters
   

// ////////////////////////////////////////////////////////////////////////////


--  step 1 (bundling javascript):

 - create a simple project that logs a product's name to the console.

 - wepack will bundle two js files into one file (dist/main.js)

   - which contains all the code.

   - we will also add a .gitignore file to prevent Git from tracking generated files.

// //////


-- files and their purpose:

-- package.json

 - what:

   - a file that lists your projects settings and dependencies, like webpack.

 - why:

   - npm uses it to track waht tools your project needs.

 - created:

   - auto generated by npm init -y, but you run the command.


-- package-lock.json

 - what:

   - a file that locks the exact versions of dependencies used in your project.

 - why:

   - ensures everyone working on the project, uses the same versions, avoiding bugs.

 - created:

   - auto generated when you install packages (eg: npm install)
 

-- node_modules/

 - what:

   - a folder containing the actual code for webpack and other tools.

 - why:

   - npm downloads these files so webpack can run.

 - created:

   - auto generated by npm install

 - git notes:

   - this folder is large and unnecessary to track in Git.


-- .gitignore

 - what:

   - a file that tells git which files or folders to ignore.

 - why:

   - prevents git from tracking node_modules/ and dist/ folders. (created later)

   - keeps the repo clean

   - makes the project self contained and explicit about its ignore rules,

     - which is useful when the project is deeply nested in the-odin-project.

 - created:

   - you create this manually.


-- src/product.js

 - what:

   - a js file defining a product (name and price)

 - why:

   - holds data we will use in the main file, like a piece of the apps logic.

 - created:

   - created manually.


-- src/index.js

 - what:

   - the main js file (the "entry point" webpack starts with)

 - why:

   - it imports product.js and logs the product data  

     - the starting point, like the main function in other languages.

 - created:

   - created manually


-- webpack.config.js

 - what:

   - a configuration file telling webpack how to bundle your project
   
 - why:

   - specifies the entry point (index.js) 

   - output folder (dist/)

   - and settings like "development" or "production" modes.

 - created:

   - created manually.


-- directory shape:

the-odin-project/
└── advanced-js/
    └── vanilla-js/
        └── lessons/
            └── webpack/
                └── ecommerce-webpack/
                    ├── .gitignore
                    ├── package.json
                    ├── package-lock.json
                    ├── node_modules/
                    ├── src/
                    │   ├── index.js
                    │   ├── product.js
                    ├── webpack.config.js


